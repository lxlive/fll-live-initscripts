#!/bin/sh

### BEGIN INIT INFO
# Provides:          fll-network
# Required-Start:    mountdevsubfs $network
# Required-Stop:
# Should-Start:      
# Should-Stop:
# Default-Start:     S
# Default-Stop:
# Short-Description: run fll.net.agent for seen devices once networking has run
# Description:       The purpose of fll-network is to re-run the fll.net.agent
#                    for network devices which came up before networking and
#                    create /run/fll/netup to flag this to the fll net agent
### END INIT INFO

###
# F.U.L.L.S.T.O.R.Y init script
#
# Copyright: (C) 2014, Niall Walsh <niallwalsh@celtux.org>
# License:   GPLv2
#
# F.U.L.L.S.T.O.R.Y Project Homepage:
# http://developer.berlios.de/projects/fullstory
###

PATH=/sbin:/usr/sbin:/bin:/usr/bin
NAME="fll-network"

if [ ! -x /etc/init.d/networking ]; then
	exit 0
fi

###
# source lsb functions
###
. /lib/lsb/init-functions

###
# source fll functions
###
. /lib/init/fll

case "${1}" in
	start)
		log_daemon_msg "${NAME}"
		log_action_begin_msg " rerun fll.net.agent with flag file present"
		[ -d /run/fll ] || mkdir /run/fll
		touch /run/fll/netup
		devices=$(udevadm trigger --verbose --dry-run --type=devices --subsystem-match=net --action=add)
		for dev in ${devices} ; do
			iface=$(udevadm info ${dev} | grep ^E\:\ INTERFACE= | awk '{print $2}')
			if [ -n "${iface}" ]; then
				env - ${iface} ACTION=add /lib/udev/fll.net.agent
			fi
		done
		log_end_msg "${?}"
		;;
	stop)
		;;
	restart|force-reload)
		echo "Error: argument '${1}' not supported" >&2
		exit 3
		;;
	status)
		log_success_msg "${0} is no dÃ¦mon."
		exit 0
		;;
	*)
		echo "Usage: ${NAME} {start|stop}" >&2
		exit 3
		;;
esac

:
